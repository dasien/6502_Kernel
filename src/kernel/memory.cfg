# memory.cfg - Memory configuration for 6502 Kernel ROM
# Based on Commodore 64 memory layout

MEMORY {
    # Zero Page - First 256 bytes of RAM (fastest access)
    ZP:     start = $0000, size = $0100, type = rw;

    # RAM - General purpose RAM
    RAM:    start = $0200, size = $7E00, type = rw;

    # I/O Area - Hardware I/O registers (VIC, SID, CIA, etc)
    IO:     start = $D000, size = $1000, type = rw;

    # ROM Area - Kernel code and data
    ROM:    start = $F000, size = $1000, type = ro;
}

SEGMENTS {
    # Code segment goes in ROM
    CODE:   load = ROM, type = ro;

    # Jump table at $FF00-$FF11
    JUMPS:  load = ROM, start = $FF00, type = ro;

    # Interrupt vectors at top of ROM
    VECS:   load = ROM, start = $FFFA, type = ro;
}

FEATURES {
    CONDES: segment = STARTUP,
            type = constructor,
            label = __CONSTRUCTOR_TABLE__,
            count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = STARTUP,
            type = destructor,
            label = __DESTRUCTOR_TABLE__,
            count = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Export ROM start for reference
    __ROM_START__: value = $F000, type = export;
    __ROM_SIZE__:  value = $1000, type = export;
}